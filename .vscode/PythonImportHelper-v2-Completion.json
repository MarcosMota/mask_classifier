[
    {
        "label": "Flask",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "jsonify",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "tensorflow",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "tensorflow",
        "description": "tensorflow",
        "detail": "tensorflow",
        "documentation": {}
    },
    {
        "label": "Image",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "ImageOps",
        "importPath": "PIL",
        "description": "PIL",
        "isExtraImport": true,
        "detail": "PIL",
        "documentation": {}
    },
    {
        "label": "numpy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "numpy",
        "description": "numpy",
        "detail": "numpy",
        "documentation": {}
    },
    {
        "label": "predict",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def predict():\n    file = request.files['image']\n    image = Image.open(file.stream)\n    data = np.ndarray(shape=(1, 224, 224, 3), dtype=np.float32)\n    #image = Image.open('test/1/1.jpeg')\n    size = (224, 224)\n    image = ImageOps.fit(image, size, Image.ANTIALIAS)\n    image_array = np.asarray(image)\n    normalized_image_array = (image_array.astype(np.float32) / 127.0) - 1\n    data[0] = normalized_image_array",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "app = Flask(__name__)\nmodel = tf.keras.models.load_model('models/keras_model.h5')\n@app.route('/api/predict/', methods=['POST'])\ndef predict():\n    file = request.files['image']\n    image = Image.open(file.stream)\n    data = np.ndarray(shape=(1, 224, 224, 3), dtype=np.float32)\n    #image = Image.open('test/1/1.jpeg')\n    size = (224, 224)\n    image = ImageOps.fit(image, size, Image.ANTIALIAS)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "model",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "model = tf.keras.models.load_model('models/keras_model.h5')\n@app.route('/api/predict/', methods=['POST'])\ndef predict():\n    file = request.files['image']\n    image = Image.open(file.stream)\n    data = np.ndarray(shape=(1, 224, 224, 3), dtype=np.float32)\n    #image = Image.open('test/1/1.jpeg')\n    size = (224, 224)\n    image = ImageOps.fit(image, size, Image.ANTIALIAS)\n    image_array = np.asarray(image)",
        "detail": "app",
        "documentation": {}
    }
]